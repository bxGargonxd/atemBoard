/* -LICENSE-START-
** Copyright (c) 2021 Blackmagic Design
**
** Permission is hereby granted, free of charge, to any person or organization
** obtaining a copy of the software and accompanying documentation covered by
** this license (the "Software") to use, reproduce, display, distribute,
** execute, and transmit the Software, and to prepare derivative works of the
** Software, and to permit third-parties to whom the Software is furnished to
** do so, all subject to the following:
**
** The copyright notices in the Software and this entire statement, including
** the above license grant, this restriction and the following disclaimer,
** must be included in all copies of the Software, in whole or in part, and
** all derivative works of the Software, unless such copies or derivative
** works are solely in the form of machine-executable object code generated by
** a source language processor.
**
** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
** FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
** SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
** FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
** ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
** DEALINGS IN THE SOFTWARE.
** -LICENSE-END-
*/

#import <Cocoa/Cocoa.h>
#import <memory>
#import "SwitcherRecordController.h"

@interface SwitcherRecordAppDelegate : NSObject <NSApplicationDelegate>
{
	IBOutlet NSWindow*			m_window;

	IBOutlet NSTextField*		m_ipAddressTextField;
	IBOutlet NSButton*			m_connectButton;
	IBOutlet NSTextField*		m_productNameTextField;

	IBOutlet NSView*			m_recordSettingsView;
	IBOutlet NSView*			m_diskSettingsView;

	IBOutlet NSTextField*		m_baseFilenameTextField;
	IBOutlet NSButton*			m_recordInAllCamerasButton;
	IBOutlet NSButton*			m_isoRecordingButton;

	IBOutlet NSPopUpButton*		m_disk1PopUpButton;
	IBOutlet NSTextField*		m_disk1StatusTextField;
	IBOutlet NSTextField*		m_disk1TimeAvailableTextField;

	IBOutlet NSPopUpButton*		m_disk2PopUpButton;
	IBOutlet NSTextField*		m_disk2StatusTextField;
	IBOutlet NSTextField*		m_disk2TimeAvailableTextField;
	
	IBOutlet NSButton*			m_switchDiskButton;

	IBOutlet NSButton*			m_startRecordingButton;
	
	IBOutlet NSTextField*		m_recordStatusTextField;
	IBOutlet NSTextField*		m_recordTimecodeTextField;
	IBOutlet NSTextField*		m_recordTimeAvailableTextField;

	std::unique_ptr<SwitcherRecordController>	m_switcherRecordController;
	BOOL										m_isConnected;
	BOOL										m_isRecording;
}

// UI Controls
- (IBAction)connectClicked:(id)sender;
- (IBAction)baseFilenameUpdated:(id)sender;
- (IBAction)recordInAllCamerasClicked:(id)sender;
- (IBAction)isoRecordingClicked:(id)sender;
- (IBAction)disk1Selected:(id)sender;
- (IBAction)disk2Selected:(id)sender;
- (IBAction)switchDiskClicked:(id)sender;
- (IBAction)startStopRecordClicked:(id)sender;

// Update UI
- (void)setProductName:(NSString*)productName;

- (void)setBaseFilename:(NSString*)fileBasename;
- (void)setRecordInAllCameras:(BOOL)recordInAllCameras;
- (void)setIsoRecording:(BOOL)isoRecording;

- (void)setDisk1Selection:(NSInteger)diskId;
- (void)setDisk2Selection:(NSInteger)diskId;
- (void)setDiskStatus:(NSString*)status forDiskId:(NSInteger)diskId;
- (void)setDiskRecordingTimeAvailable:(NSInteger)seconds forDiskId:(NSInteger)diskId;
- (void)setDiskVolumeName:(NSString*)volumeName forDiskId:(NSInteger)diskId;

- (void)setRecordingStatus:(NSString*)recordingStatus;
- (void)setTimecodeWithHours:(NSInteger)timecodeHours minutes:(NSInteger)timecodeMinutes seconds:(NSInteger)timecodeSeconds;
- (void)setTotalRecordingTimeAvailable:(NSInteger)seconds;

- (void)addDiskWithDiskId:(NSInteger)diskId volumeName:(NSString*)volumeName;
- (void)removeDiskWithDiskId:(NSInteger)diskId;

- (void)switcherDisconnected;

- (void)setRecordingActive:(BOOL)active;

- (void)enableRecordSettings:(BOOL)enable;
- (void)showError:(NSString*)title detail:(NSString*)detail;

- (NSString*)recordingTimeToString:(NSInteger)recordingTimeSeconds;

@end

